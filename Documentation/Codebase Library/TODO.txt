-------------------------

Key:
	>	Complete
	*	Todo
	-	Backburner
	%	Deprecated
	^	Auxiliary (not part of the primary modules)
end

-------------------------

Check each module's code consistency.
Deprecate the necessary components.

Code base:

*	Frameworks
	*	Scene System
		*	BaseSceneMgr
		*	BaseScene
	end
	
	*	Simple Callbacks
	*	Complex Callbacks
end

*	Instance System
	*	Image
	*	Origin
	*	BBox
end

*	Utilities
	*	CameraUtility
	*	ConfigUtility
	*	FPSUtility
end

*	Network Systems
	*	UDPNetwork
	*	TCPNetwork
end

-	Map Systems
	//"tools" build the maps, while "utilities" read the map data
	-	MapTool
	-	MapUtility
	-	WaypointTool
	-	WaypointUtility
	-	PositionTool
	-	PositionUtility
end

>	Quick Setup:
	*	SceneList
	*	SceneMgr
	*	ScenePrime
	*	Entity
	-	ImageRot
	-	EntityRot
end

-------------------------
Document known bugs.
-------------------------

>	ConfigUtility
		"__reserved" bugfix
>	CameraUtility
		Incompatible with existing Image class

-------------------------
Consider possible additions
-------------------------

*	Image::SetPosition(x, y)
*	Entity::GetX() //just (int)GetRealX()
*	"Disable" option in CameraUtility
*	"Target" option in CameraUtility, targeting an origin?
*	Rename SceneMgr to GameMgr?
*	New modules such as TCP networking, animation, rotation(done), or sound management
*	Sound manager(SDL_mixer)
*	Upgrading and compatabilities with SDL 1.3
*	add accessor for UDPNetwork's socket
*	change ConfigUtility::Real() to a float return
*	rename begin/end to head/tail
*	GitHub wiki needs to be fleshed out
-	Move the Scene macros to quick start from BaseScene
-	add entry and exit functions to the frameworks, not-unlike constructors/destructors?
-	the callback systems don't cleanup after themselfs well.
-	Rename Origin to Origin2D
-	Generic "single base class" (Does Simple Callbacks count as this? No, I need an actual class)
-	Particle system? (boost the popularity!)
-	Make SceneMgr static?

-------------------------

