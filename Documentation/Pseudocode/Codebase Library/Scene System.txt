This file is deprecated: I didn't change anything to the scene system, I only imported it.

-------------------------

manager/main logic

Logic:
	Initialise the libraries, etc.
	
	set bRunning = true
	set iScene = first
	
	while bRunning:
		//load a new scene
		if (iScene != 0):
			clear the old scene
			create the new scene
			iScene = 0
		end
		
		//run the scene's single frame
		pScene->RunFrame()
		
		//check the return message from the scene
		if (pScene->msg == quit): //msg could be any system, including scenes
			bRunning = false
		end
	end
	clear the scene
	
	Cleanup the libraries, etc.
end

-------------------------

Singleton? Static class? Inheritance?

This is the base class for the SceneManager, with some default code that can be easily overwritten.

BaseSceneManager:
	//these are called from main()
	+Init()
	+Proc()
	+Quit()
	
	*Constructor
	*Destructor
	
	//control the scenes
	*SetScene	(new scene)
	*GetScene	()
	*SetNext	(int)
	*GetNext	()
	
	//create/destroy the scenes
	*LoadScene	()=0
	*ClearScene	()
	
	//
	-BaseScene* pScene
	-bRunning
	-iNewScene //0 means nothing
End

-------------------------

BaseScene:
	//the 
	
	+SetScreen(w, h, bpp, flags)
	+GetScreen()
	
	+Constructor
	+Destructor
	
	+RunFrame
	+
end

